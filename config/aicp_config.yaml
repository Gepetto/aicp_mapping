AICP: {
  Registration: {
    type: "Pointmatcher", # GICP, Kaess
    sensorRange: 30.0,         # in meters
    sensorAngularView: 360.0,  # in degrees
    loadPosesFrom: "pcd", # file (ground truth poses), pcd
    initialTransform: "0,0,0", # x[m], y[m], yaw[deg]
                                     # - if "random" initialTransform will be
                                     # sampled from Gaussian distributed perturbations
                                     # with 0.1 m and 10 deg variance magnitude
                                     # - if "" no initial tranform will be applied
    saveCorrectedPose: true, # valid if loadPosesFromFile
    saveInitializedReadingCloud: true,
    saveRegisteredReadingCloud: true,
    enableLcmVisualization: true,

    Pointmatcher: {
      configFileName: "icp_autotuned_default.yaml",
      printOutputStatistics: false,
    }
  },
  Overlap: {
    type: "OctreeBased",
    loadPosesFromFile: "pose_scanner_leica_affine.txt", # Ground truth poses

    OctreeBased: {
      octomapResolution: 0.2,
    }
  },
  Classifier: {
    type: "SVM",

    SVM: {
      threshold: 0.50,
      trainingFile: "/home/edbot/rpg-navigation/software/aicp/data/labels/training_labelled_26Apr.txt",
      trainingLabelsFile: "/home/edbot/rpg-navigation/software/aicp/data/labels/training_labels.txt",
      testingFile: "/home/edbot/rpg-navigation/software/aicp/data/labels/testing_26Apr.txt",
      testingLabelsFile: "/home/edbot/rpg-navigation/software/aicp/data/labels/testing_labels.txt",
      saveFile: "/home/edbot/rpg-navigation/software/aicp/data/classification/svm.xml",
      modelLocation: "/home/edbot/rpg-navigation/software/aicp/data/models/svm.xml",
    },
  },
  Experiments: {
    type: "Validation", # "", "Validation"
  }
}
